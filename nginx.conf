##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    # Set this on in prod!
    lua_code_cache on;

    charset utf-8;
    source_charset utf-8;

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

server {
	# Serve this directory at the root slug (empty slug)
	root /home/starptr/src/tilde-homepage/build/root;

	# The possible files under the root directory to serve
	index index.html index.htm index.nginx-debian.html;

	# This nginx block matches if the url domain is andref.app
	server_name andref.app;

	# Lua dispatch on request
	# Unused because it's too messy
	#location ~ ^(.*)$ {
	#	set $slug $1;
	#	content_by_lua_file /usr/local/openresty/nginx/conf/normalize-head-tags.lua;
	#}

	# Regex match the slug to serve the home directories' `public_html` folder of every user
	#location ~ ^/~(.+?)(/.*)?$ {
        #	alias /home/$1/public_html$2;
        #	index index.html index.htm;
        #	autoindex on;
        #}

	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/andref.app/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/andref.app/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {
	# Redirect to https
	# Only http requests are redirected because of the `listen` expression
	if ($host = andref.app) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	listen 80 default_server;
	listen [::]:80 default_server;

	server_name andref.app;
	return 404; # managed by Certbot
}


server {
	root /home/starptr/src/tilde-homepage/build/tilde;
	index index.html index.htm index.nginx-debian.html;
	server_name tilde.andref.app; # managed by Certbot

	location ~ ^/~(.+?)(/.*)?$ {
		alias /home/$1/public_html$2;
		index index.html index.htm;
		autoindex on;
	}

	location ~ ^/disable-tildepage-index/~(.+?)(/.*)?$ {
		alias /home/$1/public_html$2;
		index effectively-disable-index-ah5nnGv3BFj4sAJx.html;
		autoindex on;
	}

	location ~ ^/status-coffee {
		root /home/starptr/status-ref/build_html;
		try_files /status.html =404;
		autoindex on;
	}

	location ~ ^/rp/(30[0-9][0-9][1-9])/(.*)$ {
		proxy_pass http://127.0.0.1:$1/$2;
	}

	listen [::]:443 ssl; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/tilde.andref.app/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/tilde.andref.app/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
	if ($host = tilde.andref.app) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	listen 80 ;
	listen [::]:80 ;

	server_name tilde.andref.app;
	return 404; # managed by Certbot
}

}
